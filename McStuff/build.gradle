/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'administrator' at '4/28/16 3:24 PM' with Gradle 2.13
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.13/userguide/tutorial_java_projects.html
 */
 buildscript {
 	repositories {
 		jcenter()
 		mavenCentral()
 	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.3.RELEASE")
	}
}
 
 allprojects {
 	apply plugin: 'eclipse'
 	apply plugin: 'java'
 	
 }
 
 subprojects {
	apply plugin: 'spring-boot'
	
	sourceCompatibility = 1.8
	targetCompatibility = 1.8

 	eclipse {
 		project {
 			natures 'org.springframework.ide.eclipse.core.springnature'
 			classpath {
 				containers 'org.eclipse.fx.ide.jdt.core.JAVAFX_CONTAINER'
 			}
 		}
 	}
	
	// In this section you declare where to find the dependencies of your project
	repositories {
	    // Use 'jcenter' for resolving your dependencies.
	    // You can declare any Maven/Ivy/file repository here.
	    jcenter()
	    mavenCentral()
	}
	
	// In this section you declare the dependencies for your production and test code
	dependencies {
	    compile 'org.springframework.boot:spring-boot-starter'
		compile 'org.springframework.boot:spring-boot-starter-data-jpa'

	    compile 'org.apache.commons:commons-lang3:3+'	    
		
		runtime 'org.apache.derby:derby:10+'

	
	    // Declare the dependency for your favourite test framework you want to use in your tests.
	    // TestNG is also supported by the Gradle Test task. Just change the
	    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
	    // 'test.useTestNG()' to your build script.
	    testCompile 'junit:junit:4.12'
	    testCompile 'org.springframework.boot:spring-boot-starter-test'	    
	}
}

project(':McStuff_app') {
	apply plugin: 'application'
	
	mainClassName = "mcstuff.application.Application"
	
	dependencies {
		compile project(':McStuff_moduleApi')
		compile project(':McStuff_rpg_module')
	}
}

project(':McStuff_rpg_module') {
	dependencies {
		compile project(':McStuff_moduleApi')
	}
}

